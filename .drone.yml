kind: pipeline
name: default

#workspace:
#  base: /app

steps:
- name: go-mod-download
  image: golang:1
  volumes:
    - name: deps
      path: /go
  commands:
    - lsb_release -s -d 2>/dev/null || { . /etc/os-release && echo $PRETTY_NAME; } 2>/dev/null || uname -s
    - echo drone version $$DRONE_SYSTEM_VERSION
    - git version || echo "git not found"
    - go version
    - go mod download

- name: test
  image: golang:1
  volumes:
    - name: deps
      path: /go
  environment:
    APP_DEBUG: 0
  commands:
    - go test -v -short ./...
  when:
    branch:
      - master
    event:
      - push
  depends_on:
    - go-mod-download

- name: slack
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook_for_test
    username: drone
    channel: test
    link_names: true
    #    template: >
    #      {{#success build.status}}
    #        build {{build.number}} succeeded. Good job.
    #      {{else}}
    #        build {{build.number}} failed. Fix me please.
    #      {{/success}}

- name: build
  image: golang:1
  volumes:
    - name: deps
      path: /go
  environment:
    APP_DEBUG: 0
  commands:
    - go build -v
  when:
    event:
      - tag
  depends_on:
    - go-mod-download

- name: deploy-production
  image: golang:1
  commands:
    - echo promoted to production
  when:
    event:
      - promote
    target:
      - production
  depends_on:
    - test
    - build

volumes:
- name: deps
  temp: {}
